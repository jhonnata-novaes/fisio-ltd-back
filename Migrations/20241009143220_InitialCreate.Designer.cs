// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using fisio_ltd_back.Models;

#nullable disable

namespace fisio_ltd_back.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241009143220_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("fisio_ltd_back.Models.DadosBasicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("DataAvaliacao")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiagnosticoClinico")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroIdentidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DadosBasicos");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.DiagnosticoPrognostico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DiagnosticoFisio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("PrognosticoFisio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QuantidadeAtendimentos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("DiagnosticosPrognosticos");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.Exames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ExameFisicoFuncional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExamesComplementares")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.FichaAnamnese", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("HabitosVida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HistoriaDoencaAtual")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HistoriaFamiliar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HistoriaPatologica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Queixa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("FichasAnamnese");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.TratamentoProposto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("PlanoTeraputico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("TratamentosPropostos");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.DiagnosticoPrognostico", b =>
                {
                    b.HasOne("fisio_ltd_back.Models.DadosBasicos", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.Exames", b =>
                {
                    b.HasOne("fisio_ltd_back.Models.DadosBasicos", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.FichaAnamnese", b =>
                {
                    b.HasOne("fisio_ltd_back.Models.DadosBasicos", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("fisio_ltd_back.Models.TratamentoProposto", b =>
                {
                    b.HasOne("fisio_ltd_back.Models.DadosBasicos", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
